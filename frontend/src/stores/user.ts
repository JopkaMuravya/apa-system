import { defineStore } from 'pinia';
import { api } from '../boot/axios';

interface User {
  id: number;
  fullName: string;
  email: string;
  role: string; // 'teacher', 'student', 'admin' –∏ —Ç. –¥.
}

export const useUserStore = defineStore('user', {
  state: () => ({
    user: null as User | null, // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ null)
    isAuthenticated: false,    // –§–ª–∞–≥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  }),

  getters: {
    // –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userName: (state) => state.user?.fullName || '–ì–æ—Å—Ç—å',
    
    // –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º)
    isTeacher: (state) => state.user?.role === 'teacher',
  },

  actions: {
    // üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É)
    async fetchUser() {
      try {
        const response = await api.get('/api/auth/user/');
        this.user = response.data;
        this.isAuthenticated = true;
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        this.logout();
      }
    },

    // üîπ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã (–æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö)
    logout() {
      this.user = null;
      this.isAuthenticated = false;
      localStorage.removeItem('token'); // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è JWT
    },

    // üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    async updateProfile(updatedData: Partial<User>) {
      try {
        const response = await api.patch('/api/auth/user/', updatedData);
        this.user = { ...this.user, ...response.data };
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', error);
      }
    },
  },
});